/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard.settings'
import { Route as DashboardMyComplaintsRouteImport } from './routes/dashboard.my-complaints'
import { Route as DashboardMessagesRouteImport } from './routes/dashboard.messages'
import { Route as DashboardHelpCenterRouteImport } from './routes/dashboard.help-center'
import { Route as DashboardComplaintsRouteImport } from './routes/dashboard.complaints'
import { Route as DashboardCategoriesRouteImport } from './routes/dashboard.categories'
import { Route as authSignupRouteImport } from './routes/(auth)/Signup'
import { Route as authSigninRouteImport } from './routes/(auth)/Signin'
import { Route as DashboardMyComplaintsComplaintIdRouteImport } from './routes/dashboard.my-complaints.$complaintId'
import { Route as DashboardComplaintFileRouteImport } from './routes/dashboard.complaint.file'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMyComplaintsRoute = DashboardMyComplaintsRouteImport.update({
  id: '/my-complaints',
  path: '/my-complaints',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMessagesRoute = DashboardMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardHelpCenterRoute = DashboardHelpCenterRouteImport.update({
  id: '/help-center',
  path: '/help-center',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardComplaintsRoute = DashboardComplaintsRouteImport.update({
  id: '/complaints',
  path: '/complaints',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardCategoriesRoute = DashboardCategoriesRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => DashboardRoute,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/(auth)/Signup',
  path: '/Signup',
  getParentRoute: () => rootRouteImport,
} as any)
const authSigninRoute = authSigninRouteImport.update({
  id: '/(auth)/Signin',
  path: '/Signin',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardMyComplaintsComplaintIdRoute =
  DashboardMyComplaintsComplaintIdRouteImport.update({
    id: '/$complaintId',
    path: '/$complaintId',
    getParentRoute: () => DashboardMyComplaintsRoute,
  } as any)
const DashboardComplaintFileRoute = DashboardComplaintFileRouteImport.update({
  id: '/complaint/file',
  path: '/complaint/file',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/Signin': typeof authSigninRoute
  '/Signup': typeof authSignupRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/complaints': typeof DashboardComplaintsRoute
  '/dashboard/help-center': typeof DashboardHelpCenterRoute
  '/dashboard/messages': typeof DashboardMessagesRoute
  '/dashboard/my-complaints': typeof DashboardMyComplaintsRouteWithChildren
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/complaint/file': typeof DashboardComplaintFileRoute
  '/dashboard/my-complaints/$complaintId': typeof DashboardMyComplaintsComplaintIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Signin': typeof authSigninRoute
  '/Signup': typeof authSignupRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/complaints': typeof DashboardComplaintsRoute
  '/dashboard/help-center': typeof DashboardHelpCenterRoute
  '/dashboard/messages': typeof DashboardMessagesRoute
  '/dashboard/my-complaints': typeof DashboardMyComplaintsRouteWithChildren
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/complaint/file': typeof DashboardComplaintFileRoute
  '/dashboard/my-complaints/$complaintId': typeof DashboardMyComplaintsComplaintIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/(auth)/Signin': typeof authSigninRoute
  '/(auth)/Signup': typeof authSignupRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/complaints': typeof DashboardComplaintsRoute
  '/dashboard/help-center': typeof DashboardHelpCenterRoute
  '/dashboard/messages': typeof DashboardMessagesRoute
  '/dashboard/my-complaints': typeof DashboardMyComplaintsRouteWithChildren
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/complaint/file': typeof DashboardComplaintFileRoute
  '/dashboard/my-complaints/$complaintId': typeof DashboardMyComplaintsComplaintIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/Signin'
    | '/Signup'
    | '/dashboard/categories'
    | '/dashboard/complaints'
    | '/dashboard/help-center'
    | '/dashboard/messages'
    | '/dashboard/my-complaints'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/dashboard/complaint/file'
    | '/dashboard/my-complaints/$complaintId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Signin'
    | '/Signup'
    | '/dashboard/categories'
    | '/dashboard/complaints'
    | '/dashboard/help-center'
    | '/dashboard/messages'
    | '/dashboard/my-complaints'
    | '/dashboard/settings'
    | '/dashboard'
    | '/dashboard/complaint/file'
    | '/dashboard/my-complaints/$complaintId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/(auth)/Signin'
    | '/(auth)/Signup'
    | '/dashboard/categories'
    | '/dashboard/complaints'
    | '/dashboard/help-center'
    | '/dashboard/messages'
    | '/dashboard/my-complaints'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/dashboard/complaint/file'
    | '/dashboard/my-complaints/$complaintId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  authSigninRoute: typeof authSigninRoute
  authSignupRoute: typeof authSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/my-complaints': {
      id: '/dashboard/my-complaints'
      path: '/my-complaints'
      fullPath: '/dashboard/my-complaints'
      preLoaderRoute: typeof DashboardMyComplaintsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/messages': {
      id: '/dashboard/messages'
      path: '/messages'
      fullPath: '/dashboard/messages'
      preLoaderRoute: typeof DashboardMessagesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/help-center': {
      id: '/dashboard/help-center'
      path: '/help-center'
      fullPath: '/dashboard/help-center'
      preLoaderRoute: typeof DashboardHelpCenterRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/complaints': {
      id: '/dashboard/complaints'
      path: '/complaints'
      fullPath: '/dashboard/complaints'
      preLoaderRoute: typeof DashboardComplaintsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/categories': {
      id: '/dashboard/categories'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/(auth)/Signup': {
      id: '/(auth)/Signup'
      path: '/Signup'
      fullPath: '/Signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/Signin': {
      id: '/(auth)/Signin'
      path: '/Signin'
      fullPath: '/Signin'
      preLoaderRoute: typeof authSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/my-complaints/$complaintId': {
      id: '/dashboard/my-complaints/$complaintId'
      path: '/$complaintId'
      fullPath: '/dashboard/my-complaints/$complaintId'
      preLoaderRoute: typeof DashboardMyComplaintsComplaintIdRouteImport
      parentRoute: typeof DashboardMyComplaintsRoute
    }
    '/dashboard/complaint/file': {
      id: '/dashboard/complaint/file'
      path: '/complaint/file'
      fullPath: '/dashboard/complaint/file'
      preLoaderRoute: typeof DashboardComplaintFileRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardMyComplaintsRouteChildren {
  DashboardMyComplaintsComplaintIdRoute: typeof DashboardMyComplaintsComplaintIdRoute
}

const DashboardMyComplaintsRouteChildren: DashboardMyComplaintsRouteChildren = {
  DashboardMyComplaintsComplaintIdRoute: DashboardMyComplaintsComplaintIdRoute,
}

const DashboardMyComplaintsRouteWithChildren =
  DashboardMyComplaintsRoute._addFileChildren(
    DashboardMyComplaintsRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardCategoriesRoute: typeof DashboardCategoriesRoute
  DashboardComplaintsRoute: typeof DashboardComplaintsRoute
  DashboardHelpCenterRoute: typeof DashboardHelpCenterRoute
  DashboardMessagesRoute: typeof DashboardMessagesRoute
  DashboardMyComplaintsRoute: typeof DashboardMyComplaintsRouteWithChildren
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardComplaintFileRoute: typeof DashboardComplaintFileRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardCategoriesRoute: DashboardCategoriesRoute,
  DashboardComplaintsRoute: DashboardComplaintsRoute,
  DashboardHelpCenterRoute: DashboardHelpCenterRoute,
  DashboardMessagesRoute: DashboardMessagesRoute,
  DashboardMyComplaintsRoute: DashboardMyComplaintsRouteWithChildren,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardComplaintFileRoute: DashboardComplaintFileRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  authSigninRoute: authSigninRoute,
  authSignupRoute: authSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
